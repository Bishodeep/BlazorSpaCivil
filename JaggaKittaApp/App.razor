@using Microsoft.AspNetCore.Authorization
@* <Router AppAssembly="@typeof(App).Assembly"> *@
@*     <Found Context="routeData"> *@
@*         <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/> *@
@*         <FocusOnNavigate RouteData="@routeData" Selector="h1"/> *@
@*     </Found> *@
@*     <NotFound> *@
@*         <PageTitle>Not found</PageTitle> *@
@*         <LayoutView Layout="@typeof(MainLayout)"> *@
@*             <p role="alert">Sorry, there's nothing at this address.</p> *@
@*         </LayoutView> *@
@*     </NotFound> *@
@* </Router>
*@
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (routeData.PageType.CustomAttributes.Any(attr => attr.GetType() == typeof(AuthorizeAttribute)))
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/> 
                        <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <h3>Page not found</h3>
        </NotFound>
    </Router>
</CascadingAuthenticationState>